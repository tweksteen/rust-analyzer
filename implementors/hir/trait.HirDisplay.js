(function() {var implementors = {};
implementors["hir"] = [{"text":"impl HirDisplay for Function","synthetic":false,"types":[]},{"text":"impl HirDisplay for Adt","synthetic":false,"types":[]},{"text":"impl HirDisplay for Struct","synthetic":false,"types":[]},{"text":"impl HirDisplay for Enum","synthetic":false,"types":[]},{"text":"impl HirDisplay for Union","synthetic":false,"types":[]},{"text":"impl HirDisplay for Field","synthetic":false,"types":[]},{"text":"impl HirDisplay for Variant","synthetic":false,"types":[]},{"text":"impl HirDisplay for Type","synthetic":false,"types":[]},{"text":"impl HirDisplay for GenericParam","synthetic":false,"types":[]},{"text":"impl HirDisplay for TypeParam","synthetic":false,"types":[]},{"text":"impl HirDisplay for LifetimeParam","synthetic":false,"types":[]},{"text":"impl HirDisplay for ConstParam","synthetic":false,"types":[]},{"text":"impl HirDisplay for Const","synthetic":false,"types":[]},{"text":"impl HirDisplay for Static","synthetic":false,"types":[]},{"text":"impl HirDisplay for Trait","synthetic":false,"types":[]},{"text":"impl HirDisplay for TypeAlias","synthetic":false,"types":[]},{"text":"impl HirDisplay for Module","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()